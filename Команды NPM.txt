Инициализация NPM:
npm init

Быстрая инициализация (везде проставлять да)
npm init --yes

Поиск пакетов:
npm search <name_package>
Сокращенно:
npm s <name_package>
Поиск можно выполнять по нескольким словам. Для этого их нужно взять в ковычки:
пример
npm s "bootstrap grid"


Посмотреть подробную информацию о пакете:
npm view <name_package>

Открыть репозиторий пакета на github:
npm repo <name_package>

Открыть домашнюю страницу пакета:
npm home <name_package>

Установка пакета:
npm install <name_package>
Сокращенно:
npm i <name_package>

npm i <name_package> -D     // Установка только для разработки
npm i <name_package> -P     // Установка для прода

Вывести список пакетов и иерархии их:
npm list 

Только пакеты без их зависимостей:
npm list --depth=0

В файле package.json в блоке scripts можно прописать свои скрипты.
Например:
  "scripts": {
    "gulp": "gulp -v"
  },

Для вывода данного скрипта используется команда:
npm run gulp (название скрипта)

Установить глобально пакет, чтобы терминал мог знать о существование этого пакета:
npm i <name_package> -g

Посмотреть список всех глобальных пакетов:
npm list -g 

Проверка наличия новых версий пакетов:
npm outdated

Удаление пакета:
npm remove <name_package>
npm r <name_package>
npm unintall <name_package>
npm un <name_package>

Посмотреть все доступные версии пакета:
npm view <name_package> versions

Установить определенную версию пакета:
npm i <name_package>@<number_version>
Например
npm i boostrap@4.1.1

Обновить версию пакета:
npm update <name_package>
npm up <name_package>
npm up    // обновит все пакеты
Обновление пакетов происходит до максимальной минорной ветки (т.е. нельзя из v4 обновиться до v5, можно v4.1 обновиться до v4.6)

В package.json можно зафиксировать версию пакета. Чтобы данный пакет не обновлялся

"bootstrap": "^5.1.3" // данная версия не зафиксирована
"bootstrap": "5.1.3"  // зафиксирована версия 5.1.3

"bootstrap": "~5.1.3" // позволяет обновлять только версию патча

Виды версий:
5.1.3
5 - мажорная версия
1 - минорная версия
3 - версия патча

Если указать:
"bootstrap": "*"  // Пакет обновиться до последней версии. В проекте нельзя использовать, только на начальной стадии

Чтобы определенная папка не переносилась в GIT репозиторий нужно создать файл:
.gitignore

в файле вписать папку, которую нужно игнорировать

Чтобы перенести все библиотеки из одного проекта в другой, достаточно перенести файлы package-lock и package.json
Далее прописываем установку:
npm i
Все пакеты, которые указаны в package.json будут установлены в новом проекте.

В файле package-lock.json указывается все дерево пакетов, которое используется в проекте


Для переноса всех библиотек, необходимых только для продакшена нужно:
npm i --production 


